{"key":"Miro2023","name":"Miro","instructions":"https://tinyurl.com/MiroMoodleAAU","requirecss":"","requirejs":"","shim":"","defaults":"","amd":"1","body":"<div class=\"TemplateContainerMiro\" id=\"TemplateContainer@@AUTOID@@\" style=\"padding-left: 0;\">\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css\" as=\"style\" style=\"margin-left: auto;\">\n    <div id=\"HeaderContainer@@AUTOID@@\" class=\"HeaderLinkContainerMiro\" style=\"padding-left: 0;\">\n        <details id=\"Details@@AUTOID@@\" closed=\"\">\n            <summary id=\"detailsButton@@AUTOID@@\" class=\"detailsCollapsibleMiro\"></summary>\n            <div id=\"stateIndicator@@AUTOID@@\" class=\"stateIndicatorMiro\"></div>\n            <div id=\"iframeContainer@@AUTOID@@\" class=\"present_wrapperMiro\" style=\"padding-left: 0;\">\n                <iframe id=\"Content@@AUTOID@@\" class=\"IframeStyleMiro\" src=\"\" frameborder=\"0\" allowfullscreen=\"true\" mozallowfullscreen=\"true\" webkitallowfullscreen=\"true\" allow=\"camera;microphone;geolocation\" as=\"style\" ></iframe>\n            </div>\n            <div class=\"Link-containerMiro\" id=\"Link-container@@AUTOID@@\">\n                <a id=\"ShareLink@@AUTOID@@\" href=\"\" target=\"_blank\" class=\"LinkMiro\" as=\"style\" style=\"margin-left: auto;\" ria-label=\"Open content in a new tab\"><i class=\"fas fa-external-link-alt\"></i> Link</a>\n            </div>\n        </details>\n        <a id=\"ShareLinkHeader@@AUTOID@@\" href=\"\" target=\"_blank\" class=\"HeaderLinkMiro\" as=\"style\" ria-label=\"Open content in a new tab\"><i class=\"fas fa-external-link-alt\"></i></a>\n    </div>\n</div>\n<script>\nwindow.onload = function(){}\n</script>","bodyend":"","script":"// Custom JS\n// user input from Moodle\nconst nameForSummary = getLongInput('@@Name: The name of the button that will contain the Miro board@@', \"Name: The name of the button that will contain the Miro board\", opts);\nconst url = getLongInput('@@Miro share URL: Copy the browser link/URL of the Miro board you want to embed@@', \"Miro share URL: Copy the browser link/URL of the Miro board you want to embed\", opts);\n/* \n  function to get the user input from the generico object opts. \n  the original input and the bare input must be the same except for the @.\n*/\nfunction getLongInput(original, bare,  opts) {\n  bare = bare.replace(/\\s/g, \"\");\n  if (original === undefined) {\n        for(const obj_new of Object.keys(opts)) {\n              const obj_sanitised = obj_new.replace(/\\s/g, \"\");\n              if(bare == obj_sanitised) {\n                    return opts[obj_new];\n              }\n        }\n  }\n  \n  return original;\n}\n\n// getting the elements from the HTML\nconst details = document.getElementById('Details'+@@AUTOID@@);\nconst detailsButton = document.getElementById('detailsButton'+@@AUTOID@@);\nconst headerLink = document.getElementById('ShareLinkHeader'+@@AUTOID@@);\nconst sharelink = document.getElementById('ShareLink'+@@AUTOID@@);\n// function calls to create the temlate on moodle\ncreateNameForSummary(nameForSummary);\nassignHeaderLinks(url);\nconst embedurl = constructURL(url);\n\n// check the background color of the page\nlet previouisBackgroundColor = getBackgroundColor();\nsetBackgrounColor(previouisBackgroundColor);\n\nonLoad(url, embedurl, nameForSummary);\n\n// function to assign the header links\nfunction assignHeaderLinks(url) {\n  headerLink.href = \"\"+ url;\n}\n\n//creates the name for the template\nfunction createNameForSummary(name) {\n  if (name) {\n    name = \"‚úèÔ∏è \"+ name; // you can add emoji to the summary title here, e.g. üé¶\n    detailsButton.textContent = name; // set the name of the button containing the padlet board\n  } else if (!name) {\n    debugger;\n    const header = document.getElementById('HeaderContainer'+@@AUTOID@@).style.display = 'none';\n    assignParent('stateIndicator', 'iframeContainer', 'Link-container', 'TemplateContainer');\n  }\n}\n\n// function to assign the parent element\nfunction assignParent(stateIndicator, iframeContainer, linkContainer, TemplateContainer) {\n  const container = document.getElementById(TemplateContainer+@@AUTOID@@);\n  const MoveArray = [document.getElementById(stateIndicator+@@AUTOID@@), document.getElementById(iframeContainer+@@AUTOID@@), document.getElementById(linkContainer+@@AUTOID@@)];\n  debugger;\n  for (let i = 0; i < MoveArray.length; i++) {\n        container.appendChild(MoveArray[i]);\n  }\n}\n// construct the URL for the embed\nfunction constructURL(url) {\n  if (url) {\n    let embedurl =  \"https://miro.com/app/live-embed/\";\n    const id = url.split(\"/\")[url.split(\"/\").length-2];\n    embedurl += id + \"/\";\n    return embedurl;\n  }\n}\n\n// on load function e.g. when the Collapsible button is clicked\nfunction onLoad(url, embedurl, nameForSummary){\n    if(url && embedurl && nameForSummary){\n      document.getElementById('Details'+@@AUTOID@@).onclick= function() {\n        assignContent(url, embedurl);\n    };\n  } else if (url && embedurl && !nameForSummary) {\n      assignContent(url, embedurl);\n  }   \n}\n\nfunction assignContent(url, embedurl) {\n  document.getElementById('Content'+@@AUTOID@@).src = \"\"+embedurl;\n  document.getElementById('ShareLink'+@@AUTOID@@).href = \"\"+url;\n  setSameSiteAttribute('None');\n}\n// set the SameSite attribute for the cookies\nfunction setSameSiteAttribute(sameSiteValue) {\n  const cookies = document.cookie.split(\";\");\n\n  for (let i = 0; i < cookies.length; i++) {\n    const cookie = cookies[i].trim();\n    const [name, value] = cookie.split(\"=\");\n\n    // Set the cookie with the desired SameSite attribute\n    document.cookie = `${name}=${value}; SameSite=${sameSiteValue}; Secure`;\n  }\n}\n\n// event listener for the details element state change\ndetails.addEventListener(\"toggle\", (event) => {\n    if (details.open) {\n      /* the element was toggled open */\n      detailsButton.style.color = '#3357c2';\n      detailsButton.style.backgroundColor = '#E1E1E1';\n      detailsButton.style.borderBottomRightRadius = '0px';\n      detailsButton.style.borderBottomLeftRadius = '0px';\n      headerLink.style.display = 'none';\n    } else {\n      /* the element was toggled closed */\n      detailsButton.style.backgroundColor = '';\n      detailsButton.style.color = '';\n      detailsButton.style.borderBottomRightRadius = '5px';\n      detailsButton.style.borderBottomLeftRadius = '5px';\n      headerLink.style.display = 'block';\n    }\n  });\n  // function to get the background color of the page\nfunction getBackgroundColor() {\n  const bodyElement = document.body;\n  const computedStyle = window.getComputedStyle(bodyElement);\n  const backgroundColor = computedStyle.backgroundColor;\n\n  return backgroundColor;\n}\n\nfunction setBackgrounColor(backGroundColor) {\n  if (backGroundColor == 'rgb(255, 255, 255)') {\n        if (detailsButton.classList.contains('detailsCollapsibleMiro')) {return;}\n        // Light mode\n        detailsButton.classList.add('detailsCollapsibleMiro');\n        detailsButton.classList.remove('detailsCollapsibleDarkModeMiro');\n        headerLink.classList.add('HeaderLinkMiro');\n        headerLink.classList.remove('HeaderLinkDarkModeMiro');\n        sharelink.classList.add('LinkMiro');\n        sharelink.classList.remove('LinkDarkModeMiro');\n  } else if (backGroundColor == 'rgb(25, 26, 30)') {\n        if (detailsButton.classList.contains('detailsCollapsibleDarkModeMiro')) {return;}\n        // Dark mode\n        detailsButton.classList.add('detailsCollapsibleDarkModeMiro');\n        detailsButton.classList.remove('detailsCollapsibleMiro');\n        headerLink.classList.add('HeaderLinkDarkModeMiro');\n        headerLink.classList.remove('HeaderLinkMiro');\n        sharelink.classList.add('LinkDarkModeMiro');\n        sharelink.classList.remove('LinkMiro');\n  }\n}\n\n// custom event to check the background color of the page\nfunction checkBackgroundColor() {\n  const currentBackgroundColor = getBackgroundColor();\n  if (currentBackgroundColor !== previouisBackgroundColor) {\n        previouisBackgroundColor = currentBackgroundColor;\n        // Trigger the custom event\n        const event = new CustomEvent('backgroundColorChanged', {detail: currentBackgroundColor});\n        document.dispatchEvent(event);\n  }\n}\n// listen interval for the background color event \nsetInterval(checkBackgroundColor, 500);\n\n// event listener for the background color change\ndocument.addEventListener('backgroundColorChanged', (event) => {\n  const newBackgroundColor = event.detail;\n  setBackgrounColor(newBackgroundColor);\n});\n\n  // function to remove the iframe focus style\nfunction removeIframeFocus(element, nameForSummary) {\n  if (!nameForSummary) {\n    element.style.backgroundColor = \"#E1E1E1\";\n      element.style.backgroundColor = \"transparent\";\n      return;\n    } else element.style.backgroundColor = \"#E1E1E1\";\n}\n// function to add the iframe focus style\nfunction addIframeFocus(element) {\n  //element.style.outline = '#f44646';\n  element.style.backgroundColor = \"#468ff4\";\n}\n\n//checks if the iframe has focus (fall back method)  \nwindow.setInterval(function() {\n  const iframeState = document.getElementById('stateIndicator'+@@AUTOID@@);\n  if (document.activeElement == document.getElementById('Content'+@@AUTOID@@)) {\n    addIframeFocus(iframeState);\n  } else {\n    removeIframeFocus(iframeState, nameForSummary);\n  }\n }, 500);\n\n// prevent event probagation\nconst linkContainer = document.getElementById('Link-container'+@@AUTOID@@);\nlinkContainer.addEventListener('click', function(event) {\n  event.stopPropagation();\n}, false);","style":".TemplateContainerMiro{\n    width: 100%;\n    overflow: auto;\n}\n\n.detailsCollapsibleMiro{\n    pointer: cursor; \n    padding: 10px; \n    border: none; \n    text-align: left; \n    outline: none;\n    font-family: \"Poppins\", sans-serif;\n    font-size: 1rem;\n    font-weight: 500;\n    line-height: 1.5;\n    color: #212121;\n    border-top-right-radius: 5px;\n    border-top-left-radius: 5px;\n    border-bottom-right-radius: 5px;\n    border-bottom-left-radius: 5px;\n    overflow: visible;\n    border: 2px solid transparent;\n}\n\n.detailsCollapsibleMiro:hover{\n    background-color: #E1E1E1;\n    color: #3357c2;\n}\n\n.detailsCollapsibleMiro:focus-visible{\n    outline: none;\n    border-color: #468ff4;\n}\n.detailsCollapsibleDarkModeMiro{\n    pointer: cursor; \n    padding: 10px; \n    border: none; \n    text-align: left; \n    outline: none;\n    font-family: \"Poppins\", sans-serif;\n    font-size: 1rem;\n    font-weight: 500;\n    line-height: 1.5;\n    color: #FFFFFF;\n    border-top-right-radius: 5px;\n    border-top-left-radius: 5px;\n    border-bottom-right-radius: 5px;\n    border-bottom-left-radius: 5px;\n    border: 2px solid transparent;\n}\n\n.detailsCollapsibleDarkModeMiro:hover{\n    background-color: #CCCCCC;\n    color: #468ff4;\n}\n\n.detailsCollapsibleDarkModeMiro:focus-visible{\n    outline: none;\n    border-color: #468ff4;\n}\n.present_wrapperMiro {\n    position: relative;\n    padding-bottom: 60 %;\n    overflow: hidden;\n    height: 58dvh;\n}\n\n.Link-containerMiro{\n    padding: 10px;\n    border-radius: 5px;\n    display: flex;\n}\n\n.LinkMiro{\n    display: block;\n    text-decoration: none;\n    padding: 5px 10px;\n    border: 1px solid #E1E1E1;\n    background-color: #E1E1E1; \n    border-radius: 5px; /* Rounded borders */\n    margin-bottom: 5px;\n    margin: 0 5px;\n    color: #131314;\n    font-size: 16px;\n    font-family: \"Poppins\", sans-serif;\n    font-weight: 400;\n    line-height: 1.6;\n}\n\n.LinkMiro:hover{\n    background-color: #b2b2b2;\n    border: 1px solid #b2b2b2;\n    color: #3357c2;\n}\n.LinkDarkModeMiro {\n    display: block;\n    text-decoration: none;\n    padding: 5px 10px;\n    border: transparent; \n    background-color: transparent;\n    border-radius: 5px; /* Rounded borders */\n    margin-bottom: 5px;\n    margin: 0 5px;\n    color: #ffffff !important;\n    font-size: 16px;\n    font-family: \"Poppins\", sans-serif;\n    font-weight: 400;\n    line-height: 1.6;\n  }\n  .LinkDarkModeMiro:hover {\n    background-color: #cccccc;\n    color: #468ff4 !important;;\n  }\n.iframeButtonMiro{\n    display: none;\n    position: absolute;\n    bottom: 5px;\n    left: 5px;\n    display: block;\n    text-decoration: none;\n    padding: 5px 10px;\n    border: 1px solid #CCCCCC;\n    background-color: #CCCCCC; \n    border-radius: 5px; /* Rounded borders */\n    margin-bottom: 5px;\n    margin: 0 5px;\n    color: #131314;\n    font-size: 16px;\n    font-family: \"Poppins\", sans-serif;\n    font-weight: 400;\n    line-height: 1.5;\n}\n.iframeButtonMiro:hover{\n    background-color: #666666;\n    border: 1px solid #666666;\n    color: #468ff4;\n}\n\n  .IframeStyleMiro{\n    width: 100%;\n    height: 100%;\n}\n.stateIndicatorMiro{\n    height: 5px;\n    background-color: #E1E1E1;\n}\n\n.HeaderLinkMiro{\n    text-decoration: none;\n    padding: 10px;\n    border-radius: 5px; /* Rounded borders */\n    color: #212121;\n    font-size: 16px;\n    font-family: \"Poppins\", sans-serif;\n    font-weight: 400;\n    line-height: 1.6;\n    right: 0;\n    border: 2px solid transparent;\n}\n.HeaderLinkMiro:hover{\n    background-color: #E1E1E1;\n    color: #3357c2;\n}\n.HeaderLinkMiro:focus-visible{\n    outline: none;\n    border-color: #468ff4;\n}\n.HeaderLinkDarkModeMiro{\n    text-decoration: none;\n    padding: 10px;\n    border-radius: 5px; /* Rounded borders */\n    color: #FFFFFF !important; \n    font-size: 16px;\n    font-family: \"Poppins\", sans-serif;\n    font-weight: 400;\n    line-height: 1.6;\n    right: 0;\n}\n.HeaderLinkDarkModeMiro:hover{\n    background-color: #CCCCCC;\n    color: #468ff4 !important;\n    border: 2px solid transparent;\n}\n.HeaderLinkDarkModeMiro:focus-visible{\n    outline: none;\n    border-color: #468ff4;\n}\n.HeaderLinkContainerMiro{\n    display: flex;\n    align-items: center;\n}\n.HeaderLinkContainerMiro > :first-child{\n    flex: 1;\n}","dataset":"","datasetvars":"","alternate":"","alternateend":"","version":"1.4.18"}