{"key":"Spotify2023","name":"Spotify podcast","instructions":"https://tinyurl.com/SpotifyPodcastsAAU","requirecss":"","requirejs":"","shim":"","defaults":"","amd":"1","body":"<div class=\"TemplateContainerSpotify\" id=\"TemplateContainer@@AUTOID@@\" style=\"padding-left: 0;\">\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css\" as=\"style\" style=\"margin-left: auto;\">\n    <script src=\"https://code.jquery.com/jquery-3.6.0.min.js\"></script>\n    <div id=\"HeaderContainer@@AUTOID@@\" class=\"HeaderLinkContainerSpotify\" style=\"padding-left: 0;\">\n        <details id=\"Details@@AUTOID@@\" closed=\"\">\n            <summary id=\"detailsButton@@AUTOID@@\" class=\"detailsCollapsibleSpotify\" tabindex=\"0\"></summary>\n            <div id=\"iframeContainer@@AUTOID@@\" class=\"present_wrapperSpotify\" style=\"padding-left: 0;\">\n                <iframe  id=\"content@@AUTOID@@\" style=\"border-radius: 0px 0px 5px 5px; padding-left: 0;\" src=\"\" width=\"100%\" height=\"352\" frameBorder=\"0\" allowfullscreen=\"\"  clipboard-write; encrypted-media; fullscreen; picture-in-picture\" loading=\"lazy\"></iframe> \n            </div>\n        </details>\n        <a id=\"ShareLinkHeader@@AUTOID@@\" href=\"\" target=\"_blank\" class=\"HeaderLinkSpotify\" as=\"style\" aria-label=\"Open content in a new tab\"><i class=\"fas fa-external-link-alt\"></i></a>\n    </div>\n</div>\n<script>\nwindow.onload = function(){}\n</script>\n","bodyend":"","script":"const summaryName = getLongInput('@@Name: The name of the button that will contain the podcast@@','Name: The name of the button that will contain the podcast', opts);\nconst url = getLongInput('@@URL: The URL for the podcast episode@@', \"URL: The URL for the podcast episode\", opts);\n\n/* \n  function to get the user input from the generico object opts. \n  the original input and the bare input must be the same except for the @.\n*/\nfunction getLongInput(original, bare,  opts) {\n  bare = bare.replace(/\\s/g, \"\");\n  if (original === undefined) {\n        for(const obj_new of Object.keys(opts)) {\n              const obj_sanitised = obj_new.replace(/\\s/g, \"\");\n              if(bare == obj_sanitised) {\n                    return opts[obj_new];\n              }\n        }\n  }\n  \n  return original;\n}\n\nconst details = document.getElementById('Details'+@@AUTOID@@);\nconst detailsButton = document.getElementById('detailsButton'+@@AUTOID@@);\nconst headerLink = document.getElementById('ShareLinkHeader'+@@AUTOID@@);\nconst content = document.getElementById('content'+@@AUTOID@@)\n\ncreateNameForSummary(summaryName);\nassignHeaderLinks(url);\nlet previouisBackgroundColor = getBackgroundColor();\nsetBackgrounColor(previouisBackgroundColor);\n\nonLoad(url, summaryName);\n\nfunction onLoad(url, summaryName) {\n  if (url && summaryName) {\n    url = constructEmbedURL(url);\n    content.src= url;\n    \n  } else if (url && !summaryName) {\n    url = constructEmbedURL(url);\n    content.src= url;\n    \n  }\n}\n\nfunction constructEmbedURL(URL){\n  if (URL) {\n        URL = URL.split(\"/\")[URL.split(\"/\").length-1];\n        URL = URL.split(\"?\")[0];\n        URL = \"https://open.spotify.com/embed/episode/\" + URL + \"?utm_source=generator&theme=0\"\n        return URL;\n  }\n}\nfunction createNameForSummary(name) {\n  if (name) {\n    detailsButton.textContent = \"🎙️ \"+ name; // set the name of the button containing the padlet board\n  } else if (!name) {\n    const header = document.getElementById('HeaderContainer'+@@AUTOID@@).style.display = 'none';\n    assignParent('iframeContainer', 'TemplateContainer');\n  }\n}\n//function to assign the stateIndicator, iframecontainer and Link-container parent to the TemplateContainerGooglePub\nfunction assignParent(iframeContainer, TemplateContainer) {\n  document.getElementById(TemplateContainer+@@AUTOID@@).appendChild(document.getElementById(iframeContainer+@@AUTOID@@));\n}\n// function to assign the header links\nfunction assignHeaderLinks(url) {\n  headerLink.href = \"\"+ url;\n}\n\n// event listener for the details element state change\ndetails.addEventListener(\"toggle\", (event) => {\n  if (details.open) {\n    /* the element was toggled open */\n    detailsButton.style.color = '#3357c2';\n    detailsButton.style.backgroundColor = '#E1E1E1';\n    detailsButton.style.borderBottomRightRadius = '5px';\n    detailsButton.style.borderBottomLeftRadius = '5px';\n    headerLink.style.display = 'none';\n  } else {\n    /* the element was toggled closed */\n    detailsButton.style.backgroundColor = '';\n    detailsButton.style.color = '';\n    detailsButton.style.borderBottomRightRadius = '5px';\n    detailsButton.style.borderBottomLeftRadius = '5px';\n    headerLink.style.display = 'block';\n  }\n});\n\n// function to get the background color of the page\nfunction getBackgroundColor() {\n  const bodyElement = document.body;\n  const computedStyle = window.getComputedStyle(bodyElement);\n  const backgroundColor = computedStyle.backgroundColor;\n\n  return backgroundColor;\n}\n\nfunction setBackgrounColor(backGroundColor) {\n  if (backGroundColor == 'rgb(255, 255, 255)') {\n        if (detailsButton.classList.contains('detailsCollapsibleSpotify')) {return;}\n        // Light mode\n        detailsButton.classList.add('detailsCollapsibleSpotify');\n        detailsButton.classList.remove('detailsCollapsibleDarkModeSpotify');\n        headerLink.classList.add('HeaderLinkSpotify');\n        headerLink.classList.remove('HeaderLinkDarkModeSpotify');\n        if (headerdownload) {\n              headerdownload.classList.add('HeaderLinkSpotify');\n              headerdownload.classList.remove('HeaderLinkDarkModeSpotify');\n        }\n  } else if (backGroundColor == 'rgb(25, 26, 30)') {\n        if (detailsButton.classList.contains('detailsCollapsibleDarkModeSpotify')) {return;}\n        // Dark mode\n        detailsButton.classList.add('detailsCollapsibleDarkModeSpotify');\n        detailsButton.classList.remove('detailsCollapsibleSpotify');\n        headerLink.classList.add('HeaderLinkDarkModeSpotify');\n        headerLink.classList.remove('HeaderLinkSpotify');\n        if (headerdownload) {\n              headerdownload.classList.add('HeaderLinkDarkModeSpotify');\n              headerdownload.classList.remove('HeaderLinkSpotify');\n        }\n  }\n}\n\n// custom event to check the background color of the page\nfunction checkBackgroundColor() {\n  const currentBackgroundColor = getBackgroundColor();\n  if (currentBackgroundColor !== previouisBackgroundColor) {\n        previouisBackgroundColor = currentBackgroundColor;\n        // Trigger the custom event\n        const event = new CustomEvent('backgroundColorChanged', {detail: currentBackgroundColor});\n        document.dispatchEvent(event);\n  }\n}\n// listen interval for the background color event \nsetInterval(checkBackgroundColor, 500);\n\n// event listener for the background color change\ndocument.addEventListener('backgroundColorChanged', (event) => {\n  const newBackgroundColor = event.detail;\n  setBackgrounColor(newBackgroundColor);\n});\n","style":".TemplateContainerSpotify{\n    width: 100%;\n    overflow: auto;\n}\n\n.detailsCollapsibleSpotify{\n    cursor: pointer;\n    padding: 10px; \n    border: none; \n    text-align: left; \n    outline: none;\n    font-family: \"Poppins\", sans-serif;\n    font-size: 1rem;\n    font-weight: 500;\n    line-height: 1.5;\n    color: #212121;\n    border-top-right-radius: 5px;\n    border-top-left-radius: 5px;\n    border-bottom-right-radius: 5px;\n    border-bottom-left-radius: 5px;\n    overflow: visible;\n    border: 2px solid transparent;\n}\n\n.detailsCollapsibleSpotify:hover{\n    background-color: #E1E1E1;\n    color: #3357c2;\n}\n\n.detailsCollapsibleSpotify:focus-visible{\n    outline: none;\n    border: 2px solid #468ff4;\n}\n.detailsCollapsibleDarkModeSpotify{\n    cursor: pointer;\n    padding: 10px; \n    border: none; \n    text-align: left; \n    outline: none;\n    font-family: \"Poppins\", sans-serif;\n    font-size: 1rem;\n    font-weight: 500;\n    line-height: 1.5;\n    color: #FFFFFF;\n    border-top-right-radius: 5px;\n    border-top-left-radius: 5px;\n    border-bottom-right-radius: 5px;\n    border-bottom-left-radius: 5px;\n    border: 2px solid transparent;\n}\n\n.detailsCollapsibleDarkModeSpotify:hover{\n    background-color: #CCCCCC;\n    color: #468ff4;\n}\n\n.detailsCollapsibleDarkModeSpotify:focus-visible{\n    outline: none;\n    border: 2px solid #468ff4;\n}\n.present_wrapperSpotify {\n    position: relative;\n    padding-bottom: 60 %;\n    overflow: hidden;\n    padding-left: 0 !important;\n}\n\n.Link-containerSpotify{\n    padding: 10px;\n    border-radius: 5px;\n    display: flex;\n}\n\n.LinkSpotify{\n    display: block;\n    text-decoration: none;\n    padding: 5px 10px;\n    border: 1px solid #E1E1E1;\n    background-color: #E1E1E1; \n    border-radius: 5px; /* Rounded borders */\n    margin-bottom: 5px;\n    margin: 0 5px;\n    color: #131314;\n    font-size: 16px;\n    font-family: \"Poppins\", sans-serif;\n    font-weight: 400;\n    line-height: 1.6;\n}\n\n.LinkSpotify:hover{\n    background-color: #b2b2b2;\n    border: 1px solid #b2b2b2;\n    color: #3357c2;\n}\n.LinkDarkModeSpotify {\n    display: block;\n    text-decoration: none;\n    padding: 5px 10px;\n    border: transparent; \n    background-color: transparent;\n    border-radius: 5px; /* Rounded borders */\n    margin-bottom: 5px;\n    margin: 0 5px;\n    color: #ffffff !important;\n    font-size: 16px;\n    font-family: \"Poppins\", sans-serif;\n    font-weight: 400;\n    line-height: 1.6;\n  }\n  .LinkDarkModeSpotify:hover {\n    background-color: #cccccc;\n    color: #468ff4 !important;;\n  }\n.iframeButtonSpotify{\n    display: none;\n    position: absolute;\n    bottom: 5px;\n    left: 5px;\n    display: block;\n    text-decoration: none;\n    padding: 5px 10px;\n    border: 1px solid #CCCCCC;\n    background-color: #CCCCCC; \n    border-radius: 5px; /* Rounded borders */\n    margin-bottom: 5px;\n    margin: 0 5px;\n    color: #131314;\n    font-size: 16px;\n    font-family: \"Poppins\", sans-serif;\n    font-weight: 400;\n    line-height: 1.5;\n}\n.iframeButtonSpotify:hover{\n    background-color: #666666;\n    border: 1px solid #666666;\n    color: #468ff4;\n}\n\n.IframeStyleSpotify{\n    width: 100%;\n    height: 100%;\n}\n\n.HeaderLinkSpotify{\n    text-decoration: none;\n    padding: 10px;\n    border-radius: 5px; /* Rounded borders */\n    color: #212121;\n    font-size: 16px;\n    font-family: \"Poppins\", sans-serif;\n    font-weight: 400;\n    line-height: 1.6;\n    right: 0;\n    border: 2px solid transparent;\n}\n.HeaderLinkSpotify:hover{\n    background-color: #E1E1E1;\n    color: #3357c2;\n}\n.HeaderLinkSpotify:focus-visible{\n    outline: none;\n    border: 2px solid #468ff4;\n}\n.HeaderLinkDarkModeSpotify{\n    text-decoration: none;\n    padding: 10px;\n    border-radius: 5px; /* Rounded borders */\n    color: #FFFFFF !important; \n    font-size: 16px;\n    font-family: \"Poppins\", sans-serif;\n    font-weight: 400;\n    line-height: 1.6;\n    right: 0;\n    border: 2px solid transparent;\n}\n.HeaderLinkDarkModeSpotify:hover{\n    background-color: #CCCCCC;\n    color: #468ff4 !important;\n}\n.HeaderLinkDarkModeSpotify:focus-visible{\n    outline: none;\n    border: 2px solid #468ff4;\n}\n.HeaderLinkContainerSpotify{\n    display: flex;\n    align-items: center;\n}\n.HeaderLinkContainerSpotify > :first-child{\n    flex: 1;\n}\n","dataset":"","datasetvars":"","alternate":"","alternateend":"","version":"1.4.18"}