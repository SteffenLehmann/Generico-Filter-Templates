{"key":"GooglePDF2023","name":"Google PDF","instructions":"https://tinyurl.com/GooglePDFAAU","requirecss":"","requirejs":"","shim":"","defaults":"","amd":"0","body":"<div class=\"TemplateContainerGooglePDF\" id=\"TemplateContainer@@AUTOID@@\" style=\"padding-left: 0;\">\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css\" as=\"style\" style=\"margin-left: auto;\">\n    <div id=\"HeaderContainer@@AUTOID@@\" class=\"HeaderLinkContainerGooglePDF\" style=\"padding-left: 0;\">\n        <details id=\"Details@@AUTOID@@\" closed=\"\">\n            <summary id=\"detailsButton@@AUTOID@@\" class=\"detailsCollapsibleGooglePDF\"></summary>\n            <div id=\"stateIndicator@@AUTOID@@\" class=\"stateIndicatorGooglePDF\"></div>\n            <div id=\"iframeContainer@@AUTOID@@\" class=\"present_wrapperGooglePDF\" style=\"padding-left: 0;\">\n                <button id=\"exitFullscreenButton@@AUTOID@@\" class=\"iframeButtonGooglePDF\" style=\"display: none;\"><i class= \"fas fa-expand\"></i> Exit </button>\n                <iframe id=\"Content@@AUTOID@@\" class=\"IframeStyleGooglePDF\" src=\"\" frameborder=\"0\" allowfullscreen=\"true\" mozallowfullscreen=\"true\" webkitallowfullscreen=\"true\" allow=\"camera;microphone;geolocation\" as=\"style\" ></iframe>\n            </div>\n            <div class=\"Link-containerGooglePDF\" id=\"Link-container@@AUTOID@@\">\n                <button id=\"fullscreenButton@@AUTOID@@\" class=\"LinkGooglePDF\"> <i class= \"fas fa-expand\"></i> Full-screen</button>\n                <a id=\"Download@@AUTOID@@\" href=\"\" target=\"_blank\" class=\"LinkGooglePDF\" as=\"style\" style=\"margin-left: auto;\" aria-label=\"Download content\"><i class=\"fas fa-download\"></i> Download</a>\n                <a id=\"ShareLink@@AUTOID@@\" href=\"\" target=\"_blank\" class=\"LinkGooglePDF\" as=\"style\" aria-label=\"Open content in a new tab\"><i class=\"fas fa-external-link-alt\"></i> Link</a>\n            </div>\n        </details>\n        <a id=\"DownloadLinkHeader@@AUTOID@@\" href=\"\" target=\"_blank\" class=\"HeaderLinkGooglePDF\" as=\"style\" aria-label=\"Download content\"><i class=\"fas fa-download\"></i></a>\n        <a id=\"ShareLinkHeader@@AUTOID@@\" href=\"\" target=\"_blank\" class=\"HeaderLinkGooglePDF\" as=\"style\" aria-label=\"Open content in a new tab\"><i class=\"fas fa-external-link-alt\"></i></a>\n    </div>\n</div>\n<script>\nwindow.onload = function(){}\n</script>","bodyend":"","script":"// Custom JS\n// user input from Moodle\nconst nameForSummary = getLongInput('@@Name: The name of the button that will contain the google PDF@@', \"Name: The name of the button that will contain the google PDF\", opts);\nconst dURL = getLongInput('@@Google share URL: Remember to make it public for everyone@@', 'Google share URL: Remember to make it public for everyone', opts);\n\n/* \n  function to get the user input from the generico object opts. \n  the original input and the bare input must be the same except for the @.\n*/\nfunction getLongInput(original, bare,  opts) {\n      bare = bare.replace(/\\s/g, \"\");\n      if (original === undefined) {\n            for(const obj_new of Object.keys(opts)) {\n                  const obj_sanitised = obj_new.replace(/\\s/g, \"\");\n                  if(bare == obj_sanitised) {\n                        return opts[obj_new];\n                  }\n            }\n      }\n      \n      return original;\n}\n\n// getting the elements from the HTML\nconst fullscreenIframeContainer = document.getElementById('iframeContainer'+@@AUTOID@@); \nconst fullscreenButton = document.getElementById('fullscreenButton'+@@AUTOID@@);\nconst exitFullscreenButton = document.getElementById('exitFullscreenButton'+@@AUTOID@@);\nconst details = document.getElementById('Details'+@@AUTOID@@);\nconst detailsButton = document.getElementById('detailsButton'+@@AUTOID@@);\nconst headerLink = document.getElementById('ShareLinkHeader'+@@AUTOID@@);\nconst headerdownload = document.getElementById('DownloadLinkHeader'+@@AUTOID@@);\nconst sharelink = document.getElementById('ShareLink'+@@AUTOID@@);\nconst download = document.getElementById('Download'+@@AUTOID@@);\n\n\n// function calls to create the temlate on moodle\ncreateNameForSummary(nameForSummary);\nassignHeaderLinks(dURL);\n\n// check the background color of the page\nlet previouisBackgroundColor = getBackgroundColor();\nsetBackgrounColor(previouisBackgroundColor);\n\n//hideEnterFullscreenButtonOnPresentation(downloadURL[1]);\nonLoad(dURL, nameForSummary);\n\n\n// function to assign the header links\nfunction assignHeaderLinks(url) {\n      const urlArray = constructURLs(url);\n      headerLink.href = \"\"+ url;\n      headerdownload.href = \"\"+urlArray[1];\n}\n\n\n// creates the name for the template\nfunction createNameForSummary(nameforbutton) {\n      let name = nameforbutton;\n      if (name) {\n            name = \"ðŸ“„ \"+ name;\n            document.getElementById('detailsButton'+@@AUTOID@@).textContent = name; \n      } else if (!name) {\n            const header = document.getElementById('HeaderContainer'+@@AUTOID@@).style.display = 'none';\n            assignParent('stateIndicator', 'iframeContainer', 'Link-container', 'TemplateContainer');\n      }\n}\n\nfunction assignParent(stateIndicator, iframeContainer, linkContainer, TemplateContainer) {\n      const container = document.getElementById(TemplateContainer+@@AUTOID@@);\n      const MoveArray = [document.getElementById(stateIndicator+@@AUTOID@@), document.getElementById(iframeContainer+@@AUTOID@@), document.getElementById(linkContainer+@@AUTOID@@)];\n\n      for (let i = 0; i < MoveArray.length; i++) {\n            container.appendChild(MoveArray[i]);\n      }\n}\n\n\n    \n// on load function e.g. when the Collapsible button is clicked\nfunction onLoad(url, nameForSummary){\n      const urlArray = constructURLs(url);\n      if (url && nameForSummary) {\n            document.getElementById('Details'+@@AUTOID@@).onclick= function() {\n                assignContent(url, urlArray);\n            };\n      } else if (url && !nameForSummary) {\n            assignContent(url, urlArray);\n      }\n}\n\nfunction assignContent(url, urlArray){\n      document.getElementById('Content'+@@AUTOID@@).src = \"\"+urlArray[0];\n      document.getElementById('ShareLink'+@@AUTOID@@).href = \"\"+ url;\n      document.getElementById('Download'+@@AUTOID@@).href = \"\"+urlArray[1];\n\n}\n// hide the enter fullscreen button on if the iframe is a presentation\nfunction hideEnterFullscreenButtonOnPresentation(type) {\n      if (type == 'presentation'){\n            fullscreenButton.style.display = 'none';\n      } \n}\n\n// function to construct the download URL\nfunction constructURLs(URL){\n      if(URL) {\n            const ID = URL.split(\"/\")[URL.split(\"/\").length-2];\n    \n            const embedURL = 'https://drive.google.com/file/d/' + ID + '/preview';\n            const downloadableURL = 'https://drive.google.com/uc?export=download&id=' + ID;\n    \n            return [embedURL, downloadableURL];\n      }\n} \n\n// event listener for the details element state change\ndetails.addEventListener(\"toggle\", (event) => {\n      if (details.open) {\n        /* the element was toggled open */\n        detailsButton.style.color = '#3357c2';\n        detailsButton.style.backgroundColor = '#E1E1E1';\n        detailsButton.style.borderBottomRightRadius = '0px';\n        detailsButton.style.borderBottomLeftRadius = '0px';\n        headerLink.style.display = 'none';\n        headerdownload.style.display = 'none';\n\n      } else {\n        /* the element was toggled closed */\n        detailsButton.style.backgroundColor = '';\n        detailsButton.style.color = '';\n        detailsButton.style.borderBottomRightRadius = '5px';\n        detailsButton.style.borderBottomLeftRadius = '5px';\n        headerLink.style.display = 'block';\n        headerdownload.style.display = 'block';\n      }\n});\n    \n// hide exit fullscreen button\nfunction hideFullscreenExitButton() {\n      exitFullscreenButton.style.display = 'none';\n}\n\n// show exit fullscreen button\nfunction showFullscreenExitButton() {\n      exitFullscreenButton.style.display = 'block';\n}\n\n// Event listener for the fullscreen button\nfullscreenButton.addEventListener('click', enterFullscreen);\n\n    // Function to enter fullscreen\nfunction enterFullscreen() {\n      if (fullscreenIframeContainer.requestFullscreen) {\n        fullscreenIframeContainer.requestFullscreen();\n      } else if (fullscreenIframeContainer.mozRequestFullScreen) {\n        fullscreenIframeContainer.mozRequestFullScreen();\n      } else if (fullscreenIframeContainer.webkitRequestFullscreen) {\n        fullscreenIframeContainer.webkitRequestFullscreen();\n      } else if (fullscreenIframeContainer.msRequestFullscreen) {\n        fullscreenIframeContainer.msRequestFullscreen();\n      }\n}\n    \n    // Function to exit fullscreen\nfunction exitFullscreen() {\n      if (document.exitFullscreen) {\n        document.exitFullscreen();\n      } else if (document.mozCancelFullScreen) {\n        document.mozCancelFullScreen();\n      } else if (document.webkitExitFullscreen) {\n        document.webkitExitFullscreen();\n      } else if (document.msExitFullscreen) {\n        document.msExitFullscreen();\n      }\n}\n    \n// Listen for fullscreen change event\ndocument.addEventListener('fullscreenchange', handleFullscreenChange);\ndocument.addEventListener('webkitfullscreenchange', handleFullscreenChange);\ndocument.addEventListener('mozfullscreenchange', handleFullscreenChange);\ndocument.addEventListener('MSFullscreenChange', handleFullscreenChange);\n\n// Handle the fullscreen change event to hide/show the exit fullscreen button\nfunction handleFullscreenChange() {\n      if (document.fullscreenElement || document.webkitFullscreenElement || document.mozFullScreenElement || document.msFullscreenElement) {\n        // If the iframe enters fullscreen\n        showFullscreenExitButton();\n      } else {\n        // If the iframe exits fullscreen\n        hideFullscreenExitButton();\n      }\n}\n    \n// Event listener for the exit fullscreen button\nexitFullscreenButton.addEventListener('click', () => {\n      exitFullscreen();\n});\n\n// function to get the background color of the page\nfunction getBackgroundColor() {\n      const bodyElement = document.body;\n      const computedStyle = window.getComputedStyle(bodyElement);\n      const backgroundColor = computedStyle.backgroundColor;\n\n      return backgroundColor;\n  }\n\nfunction setBackgrounColor(backGroundColor) {\n      if (backGroundColor == 'rgb(255, 255, 255)') {\n            if (detailsButton.classList.contains('detailsCollapsibleGooglePDF')) {return;}\n            // Light mode\n            detailsButton.classList.add('detailsCollapsibleGooglePDF');\n            detailsButton.classList.remove('detailsCollapsibleDarkModeGooglePDF');\n            headerLink.classList.add('HeaderLinkGooglePDF');\n            headerLink.classList.remove('HeaderLinkDarkModeGooglePDF');\n            sharelink.classList.add('LinkGooglePDF');\n            sharelink.classList.remove('LinkDarkModeGooglePDF');\n            fullscreenButton.classList.add('LinkGooglePDF');\n            fullscreenButton.classList.remove('LinkDarkModeGooglePDF');\n            if (headerdownload) {\n                  headerdownload.classList.add('HeaderLinkGooglePDF');\n                  headerdownload.classList.remove('HeaderLinkDarkModeGooglePDF');\n                  download.classList.add('LinkGooglePDF');\n                  download.classList.remove('LinkDarkModeGooglePDF');\n            }\n      } else if (backGroundColor == 'rgb(25, 26, 30)') {\n            if (detailsButton.classList.contains('detailsCollapsibleDarkModeGooglePDF')) {return;}\n            // Dark mode\n            detailsButton.classList.add('detailsCollapsibleDarkModeGooglePDF');\n            detailsButton.classList.remove('detailsCollapsibleGooglePDF');\n            headerLink.classList.add('HeaderLinkDarkModeGooglePDF');\n            headerLink.classList.remove('HeaderLinkGooglePDF');\n            sharelink.classList.add('LinkDarkModeGooglePDF');\n            sharelink.classList.remove('LinkGooglePDF');\n            fullscreenButton.classList.add('LinkDarkModeGooglePDF');\n            fullscreenButton.classList.remove('LinkGooglePDF');\n            if (headerdownload) {\n                  headerdownload.classList.add('HeaderLinkDarkModeGooglePDF');\n                  headerdownload.classList.remove('HeaderLinkGooglePDF');\n                  download.classList.add('LinkDarkModeGooglePDF');\n                  download.classList.remove('LinkGooglePDF');\n            }\n      }\n}\n\n// custom event to check the background color of the page\nfunction checkBackgroundColor() {\n      const currentBackgroundColor = getBackgroundColor();\n      if (currentBackgroundColor !== previouisBackgroundColor) {\n            previouisBackgroundColor = currentBackgroundColor;\n            // Trigger the custom event\n            const event = new CustomEvent('backgroundColorChanged', {detail: currentBackgroundColor});\n            document.dispatchEvent(event);\n      }\n}\n// listen interval for the background color event \nsetInterval(checkBackgroundColor, 500);\n\n// event listener for the background color change\ndocument.addEventListener('backgroundColorChanged', (event) => {\n      const newBackgroundColor = event.detail;\n      setBackgrounColor(newBackgroundColor);\n});\n\n // function to remove the iframe focus style\n function removeIframeFocus(element, nameForSummary) {\n      if (!nameForSummary) {\n            element.style.backgroundColor = \"transparent\";\n            return;\n      } else element.style.backgroundColor = \"#E1E1E1\";\n}\n// function to add the iframe focus style\nfunction addIframeFocus(element) {\n      //element.style.outline = '#f44646';\n      element.style.backgroundColor = \"#468ff4\";\n}\n\n//checks if the iframe has focus (fall back method)  \nwindow.setInterval(function() {\n      const iframeState = document.getElementById('stateIndicator'+@@AUTOID@@);\n      console.log(\"iframeState: \"+iframeState);\n      if (document.activeElement == document.getElementById('Content'+@@AUTOID@@)) {\n        addIframeFocus(iframeState);\n      } else {\n        removeIframeFocus(iframeState, nameForSummary);\n      }\n     }, 500);\n\n// prevent event probagation\nconst linkContainer = document.getElementById('Link-container'+@@AUTOID@@);\nlinkContainer.addEventListener('click', function(event) {\n      event.stopPropagation();\n}, false);\n","style":"// Custom CSS\n\n.TemplateContainerGooglePDF{\n    width: 100%;\n    overflow: auto;\n}\n\n.detailsCollapsibleGooglePDF{\n    pointer: cursor; \n    padding: 10px; \n    border: none; \n    text-align: left; \n    outline: none;\n    font-family: \"Poppins\", sans-serif;\n    font-size: 1rem;\n    font-weight: 500;\n    line-height: 1.5;\n    color: #212121;\n    border-top-right-radius: 5px;\n    border-top-left-radius: 5px;\n    border-bottom-right-radius: 5px;\n    border-bottom-left-radius: 5px;\n    overflow: visible;\n    border: 2px solid transparent;\n}\n\n.detailsCollapsibleGooglePDF:hover{\n    background-color: #E1E1E1;\n    color: #3357c2;\n}\n\n.detailsCollapsibleGooglePDF:focus-visible{\n    outline: none;\n    border-color: #468ff4;\n}\n.detailsCollapsibleDarkModeGooglePDF{\n    pointer: cursor; \n    padding: 10px; \n    border: none; \n    text-align: left; \n    outline: none;\n    font-family: \"Poppins\", sans-serif;\n    font-size: 1rem;\n    font-weight: 500;\n    line-height: 1.5;\n    color: #FFFFFF;\n    border-top-right-radius: 5px;\n    border-top-left-radius: 5px;\n    border-bottom-right-radius: 5px;\n    border-bottom-left-radius: 5px;\n    border: 2px solid transparent;\n}\n\n.detailsCollapsibleDarkModeGooglePDF:hover{\n    background-color: #CCCCCC;\n    color: #468ff4;\n}\n\n.detailsCollapsibleDarkModeGooglePDF:focus-visible{\n    outline: none;\n    border-color: #468ff4;\n}\n.present_wrapperGooglePDF {\n    position: relative;\n    padding-bottom: 60 %;\n    overflow: hidden;\n    height: 58dvh;\n}\n\n.Link-containerGooglePDF{\n    padding: 10px;\n    border-radius: 5px;\n    display: flex;\n}\n\n.LinkGooglePDF{\n    display: block;\n    text-decoration: none;\n    padding: 5px 10px;\n    border: 1px solid #E1E1E1;\n    background-color: #E1E1E1; \n    border-radius: 5px; /* Rounded borders */\n    margin-bottom: 5px;\n    margin: 0 5px;\n    color: #131314;\n    font-size: 16px;\n    font-family: \"Poppins\", sans-serif;\n    font-weight: 400;\n    line-height: 1.6;\n}\n.LinkDarkModeGooglePDF {\n    display: block;\n    text-decoration: none;\n    padding: 5px 10px;\n    border: transparent; \n    background-color: transparent;\n    border-radius: 5px; /* Rounded borders */\n    margin-bottom: 5px;\n    margin: 0 5px;\n    color: #ffffff !important;\n    font-size: 16px;\n    font-family: \"Poppins\", sans-serif;\n    font-weight: 400;\n    line-height: 1.6;\n  }\n  .LinkDarkModeGooglePDF:hover {\n    background-color: #cccccc;\n    color: #468ff4 !important;;\n  }\n.LinkGooglePDF:hover{\n    background-color: #b2b2b2;\n    border: 1px solid #b2b2b2;\n    color: #3357c2;\n}\n.iframeButtonGooglePDF{\n    display: none;\n    position: absolute;\n    bottom: 5px;\n    left: 5px;\n    display: block;\n    text-decoration: none;\n    padding: 5px 10px;\n    border: 1px solid #CCCCCC;\n    background-color: #CCCCCC; \n    border-radius: 5px; /* Rounded borders */\n    margin-bottom: 5px;\n    margin: 0 5px;\n    color: #131314;\n    font-size: 16px;\n    font-family: \"Poppins\", sans-serif;\n    font-weight: 400;\n    line-height: 1.5;\n}\n.iframeButtonGooglePDF:hover{\n    background-color: #666666;\n    border: 1px solid #666666;\n    color: #468ff4;\n}\n\n  .IframeStyleGooglePDF{\n    width: 100%;\n    height: 100%;\n}\n\n.stateIndicatorGooglePDF{\n    height: 5px;\n    background-color: #E1E1E1;\n}\n\n.HeaderLinkGooglePDF{\n    text-decoration: none;\n    padding: 10px;\n    border-radius: 5px; /* Rounded borders */\n    color: #212121;\n    font-size: 16px;\n    font-family: \"Poppins\", sans-serif;\n    font-weight: 400;\n    line-height: 1.6;\n    right: 0;\n    border: 2px solid transparent;\n}\n.HeaderLinkGooglePDF:hover{\n    background-color: #E1E1E1;\n    color: #3357c2;\n}\n.HeaderLinkGooglePDF:focus-visible{\n    outline: none;\n    border-color: #468ff4;\n}\n.HeaderLinkDarkModeGooglePDF{\n    text-decoration: none;\n    padding: 10px;\n    border-radius: 5px; /* Rounded borders */\n    color: #FFFFFF !important; \n    font-size: 16px;\n    font-family: \"Poppins\", sans-serif;\n    font-weight: 400;\n    line-height: 1.6;\n    right: 0;\n    border: 2px solid transparent;\n}\n.HeaderLinkDarkModeGooglePDF:hover{\n    background-color: #CCCCCC;\n    color: #468ff4 !important;\n}\n.HeaderLinkDarkModeGooglePDF:focus-visible{\n    outline: none;\n    border-color: #468ff4;\n}\n\n.HeaderLinkContainerGooglePDF{\n    display: flex;\n    align-items: center;\n}\n.HeaderLinkContainerGooglePDF > :first-child{\n    flex: 1;\n}","dataset":"","datasetvars":"","alternate":"","alternateend":"","version":"1.4.19"}
